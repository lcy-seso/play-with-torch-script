[Clan] Info: parsing file #1 (example.c)
#                                                     
#          <|                                         
#           A                                         
#          /.\                                       
#     <|  [""M#                                     
#      A   | #            Clan McCloog Castle         
#     /.\ [""M#           [Generated by Clan 0.8.1]
#    [""M# | #  U"U#U                              
#     | #  | #  \ .:/                                
#     | #  | #___| #                                  
#     | "--'     .-"                                
#   |"-"-"-"-"-#-#-##                            
#   |     # ## ######                                 
#    \       .::::'/                                 
#     \      ::::'/                                  
#   :8a|    # # ##                                    
#   ::88a      ###                                    
#  ::::888a  8a ##::.                                 
#  ::::::888a88a[]::::                                
# :::::::::SUNDOGa8a::::. ..                          
# :::::8::::888:Y8888:::::::::...                     
#::':::88::::888::Y88a______________________________________________________
#:: ::::88a::::88a:Y88a                                  __---__-- __
#' .: ::Y88a:::::8a:Y88a                            __----_-- -------_-__
#  :' ::::8P::::::::::88aa.                   _ _- --  --_ --- __  --- __--
#.::  :::::::::::::::::::Y88as88a...s88aa.
#
# [File generated by the OpenScop Library 0.9.1]

<OpenScop>

# =============================================== Global
# Language
C

# Context
CONTEXT
0 6 0 0 0 4

# Parameters are provided
1
<strings>
M N P Q
</strings>

# Number of statements
3

# =============================================== Statement 1
# Number of relations describing the statement:
3

# ----------------------------------------------  1.1 Domain
DOMAIN
3 7 1 0 0 4
# e/i|  i |  M    N    P    Q |  1  
   1    1    0    0    0    0    0    ## i >= 0
   1   -1    1    0    0    0   -1    ## -i+M-1 >= 0
   1    0    1    0    0    0   -1    ## M-1 >= 0

# ----------------------------------------------  1.2 Scattering
SCATTERING
3 10 3 1 0 4
# e/i| c1   c2   c3 |  i |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    1    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    ## c3 == 0

# ----------------------------------------------  1.3 Access
WRITE
2 9 2 1 0 4
# e/i| Arr  [1]|  i |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    3    ## Arr == Z
   0    0   -1    1    0    0    0    0    0    ## [1] == i

# ----------------------------------------------  1.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
1
# List of original iterators
i
# Statement body expression
Z[i] = 0;
</body>

# =============================================== Statement 2
# Number of relations describing the statement:
7

# ----------------------------------------------  2.1 Domain
DOMAIN
6 8 2 0 0 4
# e/i|  i    j |  M    N    P    Q |  1  
   1    1    0    0    0    0    0    0    ## i >= 0
   1   -1    0    1    0    0    0   -1    ## -i+M-1 >= 0
   1    0    0    1    0    0    0   -1    ## M-1 >= 0
   1    0    1    0    0    0    0    0    ## j >= 0
   1    0   -1    0    1    0    0   -1    ## -j+N-1 >= 0
   1    0    0    0    1    0    0   -1    ## N-1 >= 0

# ----------------------------------------------  2.2 Scattering
SCATTERING
5 13 5 2 0 4
# e/i| c1   c2   c3   c4   c5 |  i    j |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    1    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    1    ## c3 == 1
   0    0    0    0   -1    0    0    1    0    0    0    0    0    ## c4 == j
   0    0    0    0    0   -1    0    0    0    0    0    0    0    ## c5 == 0

# ----------------------------------------------  2.3 Access
READ
2 10 2 2 0 4
# e/i| Arr  [1]|  i    j |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    3    ## Arr == Z
   0    0   -1    1    0    0    0    0    0    0    ## [1] == i

WRITE
2 10 2 2 0 4
# e/i| Arr  [1]|  i    j |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    3    ## Arr == Z
   0    0   -1    1    0    0    0    0    0    0    ## [1] == i

READ
3 11 3 2 0 4
# e/i| Arr  [1]  [2]|  i    j |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    0    6    ## Arr == A
   0    0   -1    0    1    0    0    0    0    0    0    ## [1] == i
   0    0    0   -1    0    1    0    0    0    0    0    ## [2] == j

READ
3 11 3 2 0 4
# e/i| Arr  [1]  [2]|  i    j |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    0    7    ## Arr == B
   0    0   -1    0    0    1    0    0    0    0    0    ## [1] == j
   0    0    0   -1    1    0    0    0    0    0    0    ## [2] == i

READ
2 10 2 2 0 4
# e/i| Arr  [1]|  i    j |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    8    ## Arr == X
   0    0   -1    0    1    0    0    0    0    0    ## [1] == j

# ----------------------------------------------  2.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
2
# List of original iterators
i j
# Statement body expression
Z[i] += (A[i][j] + B[j][i]) * X[j];
</body>

# =============================================== Statement 3
# Number of relations describing the statement:
6

# ----------------------------------------------  3.1 Domain
DOMAIN
9 9 3 0 0 4
# e/i|  i    k    l |  M    N    P    Q |  1  
   1    1    0    0    0    0    0    0    0    ## i >= 0
   1   -1    0    0    1    0    0    0   -1    ## -i+M-1 >= 0
   1    0    0    0    1    0    0    0   -1    ## M-1 >= 0
   1    0    1    0    0    0    0    0    0    ## k >= 0
   1    0   -1    0    0    0    1    0   -1    ## -k+P-1 >= 0
   1    0    0    0    0    0    1    0   -1    ## P-1 >= 0
   1    0    0    1    0    0    0    0    0    ## l >= 0
   1    0    0   -1    0    0    0    1   -1    ## -l+Q-1 >= 0
   1    0    0    0    0    0    0    1   -1    ## Q-1 >= 0

# ----------------------------------------------  3.2 Scattering
SCATTERING
7 16 7 3 0 4
# e/i| c1   c2   c3   c4   c5   c6   c7 |  i    k    l |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    0    0    0    0    0    0    0    ## c1 == 0
   0    0   -1    0    0    0    0    0    1    0    0    0    0    0    0    0    ## c2 == i
   0    0    0   -1    0    0    0    0    0    0    0    0    0    0    0    2    ## c3 == 2
   0    0    0    0   -1    0    0    0    0    1    0    0    0    0    0    0    ## c4 == k
   0    0    0    0    0   -1    0    0    0    0    0    0    0    0    0    0    ## c5 == 0
   0    0    0    0    0    0   -1    0    0    0    1    0    0    0    0    0    ## c6 == l
   0    0    0    0    0    0    0   -1    0    0    0    0    0    0    0    0    ## c7 == 0

# ----------------------------------------------  3.3 Access
READ
2 11 2 3 0 4
# e/i| Arr  [1]|  i    k    l |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    0    3    ## Arr == Z
   0    0   -1    0    1    0    0    0    0    0    0    ## [1] == k

WRITE
2 11 2 3 0 4
# e/i| Arr  [1]|  i    k    l |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    0    3    ## Arr == Z
   0    0   -1    0    1    0    0    0    0    0    0    ## [1] == k

READ
3 12 3 3 0 4
# e/i| Arr  [1]  [2]|  i    k    l |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    0    0    6    ## Arr == A
   0    0   -1    0    0    1    0    0    0    0    0    0    ## [1] == k
   0    0    0   -1    0    0    1    0    0    0    0    0    ## [2] == l

READ
2 11 2 3 0 4
# e/i| Arr  [1]|  i    k    l |  M    N    P    Q |  1  
   0   -1    0    0    0    0    0    0    0    0   13    ## Arr == Y
   0    0   -1    0    0    1    0    0    0    0    0    ## [1] == l

# ----------------------------------------------  3.4 Statement Extensions
# Number of Statement Extensions
1
<body>
# Number of original iterators
3
# List of original iterators
i k l
# Statement body expression
Z[k] += A[k][l] * Y[l];
</body>

# =============================================== Extensions
<scatnames>
b0 i b1 k b2 l b3
</scatnames>

<arrays>
# Number of arrays
13
# Mapping array-identifiers/array-names
1 i
2 M
3 Z
4 j
5 N
6 A
7 B
8 X
9 k
10 P
11 l
12 Q
13 Y
</arrays>

<coordinates>
# File name
example.c
# Starting line and column
9 0
# Ending line and column
20 0
# Indentation
2
</coordinates>

</OpenScop>
